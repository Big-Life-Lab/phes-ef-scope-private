---
title: "dictionary documentation"
format:
  html:
    theme: default
    toc: true
    toc-title: "Terms"   
    toc-depth: 2   
execute-dir: project
params:
  dict_path: "../data_raw/2025_07_15_ScopingReview_ReportedConcepts(terms_main).csv"
---

```{r}
#| label: setup
#| echo: false
#| message: false
#| warning: false

# packages
library(readr)
library(dplyr)
library(stringr)
library(tidyr)   
library(purrr)
library(glue)

# read CSV
d <- readr::read_csv(
  file = params$dict_path,
  show_col_types = FALSE,
  col_types = readr::cols(.default = readr::col_character())
) %>%
  dplyr::mutate(dplyr::across(where(is.character), ~ stringr::str_squish(.)))

if (!"delphi_see_also" %in% names(d)) d$delphi_see_also <- NA_character_
d <- d %>%
  mutate(see_also = delphi_see_also)

need <- c("term_name","obo_id","term_label","see_also","scr_def",
          "term_description","term_background","scr_exact_synonym","scr_broad_synonym")
for (c in need) if (!c %in% names(d)) d[[c]] <- NA_character_

d <- d %>%
  select(all_of(need)) %>%
  mutate(across(everything(), ~ replace_na(., "–"))) %>%
  arrange(term_name)

is_na_like <- function(x) {
  x_trim <- stringr::str_trim(x)
  x_low  <- tolower(x_trim)
  is.na(x) | x_trim == "" | x_low %in% c("na", "n/a", "-", "–", "—")
}


# anchor
slug <- function(x) {
  x |>
    str_trim() |>
    str_to_lower() |>
    str_replace_all("[^a-z0-9]+","-") |>
    str_replace_all("(^-|-$)", "")
}
d <- d %>%
  mutate(
    header = if_else(!is_na_like(term_name), term_name, term_label),
    anchor = slug(header)
  )

#  See also link
name_to_anchor <- d %>% select(term_name, anchor)
link_see_also <- function(s) {
  if (is_na_like(s)) return("N/A")
  parts <- str_split(s, ";|,")[[1]] |> str_trim() |> unique()
  linked <- purrr::map_chr(parts, function(p) {
    if (is_na_like(p)) return("N/A")
    hit <- name_to_anchor$anchor[name_to_anchor$term_name == p]
    if (length(hit) == 1 && !is.na(hit)) glue("[{p}](#{hit})") else p
  })
  paste(linked, collapse = "; ")
}
d <- d %>% mutate(see_also_render = vapply(see_also, link_see_also, character(1)))
```

```{r}
#| label: render-dictionary
#| echo: false
#| results: asis
purrr::pwalk(
  d,
  function(term_name, obo_id, term_label, see_also, scr_def,
           term_description, term_background, scr_exact_synonym, scr_broad_synonym,
           header, anchor, see_also_render) {

    cat(glue("
## {header} {{#{anchor}}}


**ID:** {obo_id}  
**Label:** {term_label}  
**See also:** {see_also_render}

**Definition**
{scr_def}

**Description**
{term_description}

**Background**
{term_background}

**Synonyms**

- **Exact:** {scr_exact_synonym}  
- **Broad:** {scr_broad_synonym}


***

"))
  }
)


```

